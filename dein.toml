[[plugins]]
repo = 'Shougo/dein.vim'

# [[plugins]]
# repo = 'Shougo/neocomplete.vim'

[[plugins]]
repo = 'ervandew/supertab'
hook_add = '''
  let g:SuperTabDefaultCompletionType = "<c-n>"
  let g:SuperTabContextDefaultCompletionType = "<c-n>"
'''

# [[plugins]]
# repo = 'scrooloose/syntastic'
# hook_add = '''
#   let g:syntastic_ruby_checkers = ['rubocop']
#   let g:syntastic_go_checkers = ['go', 'golint', 'govet', 'errcheck']
#   let g:syntastic_rust_checkers = ['rustc']
#   let g:syntastic_cs_checkers = ['code_checker']
#   let g:syntastic_python_checkers = ['flake8']
#
#   " let g:syntastic_typescript_checkers = ['tsc', 'tslint']
#   " let g:syntastic_typescript_tsc_fname = ''
#
#   let g:syntastic_java_javac_options = "-Xlint -J-Dfile.encoding=UTF8"
#   let g:syntastic_java_javac_delete_option = 0
#
#   " Disable
#   let g:syntastic_cpp_checkers = ['']
# '''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_linters = {
    \ 'cpp': ['clang', 'cppcheck'],
    \ 'go': ['go vet', 'golint', 'go build'],
    \ 'javascript': ['eslint', 'flow'],
    \ 'typescript': ['tsserver', 'tslint'],
    \ 'python': ['flake8'],
    \ 'rust': ['rustc']
  \ }

  let g:ale_fixers = {
    \ 'javascript': ['eslint']
    \ }

  let g:ale_completion_enabled = 1

  function! s:lint_on_save()
    let g:ale_lint_on_save = 1
    let g:ale_lint_on_text_changed = 'never'
    let g:ale_lint_on_enter = 0
  endfunction

  autocmd! FileType javascript call s:lint_on_save()
'''

# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# hook_add = '''
#   set hidden
#
#   let g:LanguageClient_serverCommands = {
#       \ 'rust': ['rustup', 'run', 'nightly', 'rls'],
#       \ }
#
#   nnoremap <silent> K :call LanguageClient_textDocument_hover()<CR>
#   nnoremap <silent> gd :call LanguageClient_textDocument_definition()<CR>
#   nnoremap <silent> <F2> :call LanguageClient_textDocument_rename()<CR>
# '''

[[plugins]]
repo = 'airblade/vim-gitgutter'

# [[plugins]]
# repo = 'vim-airline/vim-airline'
# hook_add = '''
#   let g:airline#extensions#tabline#enabled = 1
#   let g:airline#extensions#tabline#buffer_nr_show = 1
#   let g:airline#extensions#whitespace#mixed_indent_algo = 1
#   "let g:airline_powerline_fonts = 1
# '''

[[plugins]]
repo = 'delphinus/lightline-delphinus'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = { 'colorscheme': 'solarized' }

  augroup LightLineOnALE
    autocmd!
    autocmd User ALELint call lightline#update()
  augroup END
'''

[[plugins]]
repo = 'maximbaz/lightline-ale'

[[plugins]]
repo = 'ap/vim-buftabline'
hook_add = '''
  let g:buftabline_numbers = 1
  let g:buftabline_indicators = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'lambdalisue/gina.vim'
hook_add = '''
  nnoremap <leader>ss :<C-u>Gina status -s<CR>
  nnoremap <leader>gc :<C-u>Gina commit<CR>
  nnoremap <leader>ga :<C-u>Gina commit --amend<CR>
  nnoremap <leader>gl :<C-u>Gina log<CR>
'''

[[plugins]]
repo = 'cocopon/vaffle.vim'
hook_add = '''
  nmap <C-n> :Vaffle<CR>
'''

[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = '''
    let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'thinca/vim-ref'

[[plugins]]
repo = 'yuku-t/vim-ref-ri'

[[plugins]]
repo = 'szw/vim-tags'

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
    let g:user_emmet_settings = {
    \   'lang': 'ja'
    \ }
'''

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'

[[plugins]]
repo = 'KabbAmine/gulp-vim'
hook_add = '''
  autocmd FileType typescript nnoremap <C-b> :Gulp<CR>
'''

[[plugins]]
repo = 'tpope/vim-dispatch'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_add = '''
  let g:vimproc#download_windows_dll = 1
'''
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'osyo-manga/unite-airline_themes'

[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
  nmap <leader>c <Plug>(caw:zeropos:toggle)
  xmap <leader>c <Plug>(caw:zeropos:toggle)
  nmap <leader>C <Plug>(caw:zeropos:uncomment)
  xmap <leader>C <Plug>(caw:zeropos:uncomment)
'''

[[plugins]]
repo = 't9md/vim-quickhl'
hook_add = '''
  nmap <Space>m <Plug>(quickhl-manual-this)
  xmap <Space>m <Plug>(quickhl-manual-this)
  nmap <Space>M <Plug>(quickhl-manual-reset)
  xmap <Space>M <Plug>(quickhl-manual-reset)
'''

[[plugins]]
repo = 'vim-scripts/Highlight-UnMatched-Brackets'

[[plugins]]
repo = 'https://gitlab.com/zerogoichi/Fazima.git'
hook_add = '''
  let g:fazima#enable = 0
'''

[[plugins]]
repo = 'elixir-editors/vim-elixir'

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
  "map / <Plug>(incsearch-forward)
  "map ? <Plug>(incsearch-backward)
  "map g/ <Plug>(incsearch-stay)
'''

[[plugins]]
repo = 'artur-shaik/vim-javacomplete2'
hook_add = '''
  let g:JavaComplete_ClasspathGenerationOrder = ['Maven', 'Eclipse', 'Gradle']
  
  function! AJavaImports()
    :JCimportsAddMissing
    :JCimportsRemoveUnused
  endfunction
  
  augroup JavaA
    autocmd!
    autocmd FileType java setlocal omnifunc=javacomplete#Complete
    autocmd FileType java setlocal completefunc=javacomplete#CompleteParamsInfo
    autocmd BufWrite *.java call AJavaImports()
  augroup END
'''

[[plugins]]
repo = 'vim-jp/vim-java'

# [[plugins]]
# repo = 'thinca/vim-quickrun'
# hook_add = '''
#     let g:quickrun_config = get(g:, 'quickrun_config', {})
#     let g:quickrun_config._ = {
#           \ 'runner'    : 'vimproc',
#           \ 'runner/vimproc/updatetime' : 60,
#           \ 'outputter' : 'error',
#           \ 'outputter/error/success' : 'buffer',
#           \ 'outputter/error/error'   : 'quickfix',
#           \ 'outputter/buffer/split'  : ':rightbelow 8sp',
#           \ 'outputter/buffer/close_on_empty' : 1,
#           \ }
# '''

#[[plugins]]
#repo = 'mikelue/vim-maven-plugin'

#[[plugins]]
#repo = 'hackhowtofaq/vim-solargraph'

#TypeScript
# [[plugins]]
# repo = 'Quramy/tsuquyomi'
# hook_add = '''
#     let g:tsuquyomi_completion_detail = 1
#     let g:tsuquyomi_disable_quickfix = 1
#     let g:tsuquyomi_completion_preview = 1
#     let g:syntastic_typescript_checkers = ['tsuquyomi']
#
#     autocmd! FileType typescript setlocal balloonexpr=tsuquyomi#balloonexpr()
#     autocmd! FileType typescript nnoremap <C-k> :TsuSignatureHelp<CR>
# '''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'Shougo/NeoSnippet'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = ['NeoSnippet']

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['nvim-yarp', 'vim-hug-neovim-rpc']
hook_add = '''
  let g:python3_host_prog = "C:/Python35/python.exe"
  let g:deoplete#enable_at_startup = 1
  let g:enable_smart_case = 1
  let g:deoplete#disable_auto_complete = 1

  inoremap <expr> <C-x><C-o> pumvisible() ? "\<C-n>" : deoplete#mappings#manual_complete()
'''

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'tmsanrinsha/SyntaxRange'

[[plugins]]
repo = 'ryym/vim-riot'

[[plugins]]
repo = 'posva/vim-vue'

[[plugins]]
repo = 'dbmrq/vim-redacted'

[[plugins]]
repo = 'othree/yajs.vim'

[[plugins]]
repo = 'mxw/vim-jsx'

[[plugins]]
repo = 'severin-lemaignan/vim-minimap'
hook_add = '''
  let g:minimap_highlight = 'Visual'
'''

[[plugins]]
repo = "PProvost/vim-ps1"

# ==================================================
# Colorscheme
# ==================================================

[[plugins]]
repo = 'freeo/vim-kalisi'

[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'vim-scripts/rdark'

[[plugins]]
repo = 'jonathanfilip/vim-lucius'

[[plugins]]
repo = 'vim-scripts/twilight'

[[plugins]]
repo = 'sjl/badwolf'

[[plugins]]
repo = 'nightsense/carbonized'

[[plugins]]
repo = 'Zabanaa/neuromancer.vim'

[[plugins]]
repo = 'hzchirs/vim-material'

[[plugins]]
repo = 'vim-scripts/mayansmoke'

[[plugins]]
repo = 'bluz71/vim-moonfly-colors'

[[plugins]]
repo = 'cnj4/horseradish256'

[[plugins]]
repo = 'therubymug/vim-pyte'

[[plugins]]
repo = 'nanotech/jellybeans.vim'

[[plugins]]
repo = 'nightsense/simplifysimplify'

[[plugins]]
repo = 'cocopon/iceberg.vim'
